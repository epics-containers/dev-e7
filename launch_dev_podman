#!/bin/bash

# launch the workspace developer container outside of vscode

thisdir=$(realpath $(dirname ${BASH_SOURCE[0]}))

pwd=$(pwd)
cd $thisdir

echo "building with logs in /tmp/launch_dev.log ..."
podman build -t dev_ws ${thisdir}/.devcontainer > /tmp/launch_dev.log
echo "build complete."

export MYHOME=/home/${USER}
mounts="
-v=$(pwd):$(pwd)
-v=${MYHOME}:${MYHOME}
-v=${MYHOME}/.ssh:/root/.ssh
-v=${MYHOME}/.bash_history:/root/.bash_history
-v=${thisdir}/.bashrc_dev:/root/.bashrc
-v=${thisdir}/.inputrc:/root/.inputrc
-v=${thisdir}/cli-tools:/cli-tools
-v=${XDG_RUNTIME_DIR}/podman/podman.sock:/var/run/docker.sock
-v=/tmp:/tmp
"

# --security-opt=label=disable

opts="
-e DISPLAY
-e USER
-e KUBECONFIG
-e SHELL
-e SSH_AUTH_SOCK
--security-opt=label=type:container_runtime_t
--annotation=run.oci.keep_original_groups=1
--storage-opt=ignore_chown_errors=true
"

# these options are specific to DLS - everything else should be generic
dls="
-v /dls_sw/apps/kubernetes/pollux/:/dls_sw/apps/kubernetes/pollux/
-v /dls_sw/apps/kubernetes/argus/:/dls_sw/apps/kubernetes/argus/
"
# instead of the above mounts you could copy the cluster root certs locally:
#   cp /dls_sw/apps/kubernetes/pollux/ca.crt ${HOME}/.kube/pollux.crt
#   sed -i s=/dls_sw/apps/kubernetes/pollux/ca.crt=pollux.crt= ${HOME}/.kube/config_pollux
#   cp /dls_sw/apps/kubernetes/argus/ca.crt ${HOME}/.kube/argus.crt
#   sed -i s=/dls_sw/apps/kubernetes/argus/ca.crt=argus.crt= ${HOME}/.kube/config_argus


# add your own args by setting podarg environment variable

systemctl --user start podman.socket
podman run ${podarg} ${dls} ${opts} -w ${pwd} --rm ${mounts} -it "$@" dev_ws bash
