#!/bin/bash

#################### EXAMPLE ################################################### 

# personal .bashrc_dev for setting up environment in developer containers

# prompt: adds 'IOC' for generic IOC containers and 'dev-u22' for the workspace
# container
function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
PS1="\[\e[32m\]\$(parse_git_branch)\[\e[m\][\[\e[34m\]\[\e[m\]\W]\$ "
if [[ -f /etc/centos-release ]] ; then
    PS1="[\e[31m\]C7\e[m\]]${PS1}"
else 
    PS1="[\e[31m\]${DEV_PROMPT:-container}\e[m\]]${PS1}"
fi
export PS1

# point at your cluster config file
export KUBECONFIG=/home/giles/.kube/config_pollux
# the default beamline for ec commands
export K8S_BEAMLINE=bl45p
# where to get HELM charts for ec commands
export K8S_HELM_REGISTRY=ghcr.io/epics-containers
# where to get container IMAGES for ec commands
export K8S_IMAGE_REGISTRY=ghcr.io/epics-containers
# the URL for the facility graylog
export K8S_GRAYLOG_URL=https://graylog2.diamond.ac.uk
# set this to True to supress output of commands in 'ec' CLI
unset K8S_QUIET# extra arguments to supply to containerised CLI commands
export K8S_CLI_ARGS='
-v=/scratch:/scratch
'

# enable autossh proxy if it exists and is not already running
# - REMOVE THIS if ssh proxy is not required.
# - OR CHANGE user@server to your own details
if (! pgrep autossh) && which autossh 2>/dev/null; then
  echo "Starting autossh"
  nohup autossh -N -D9090 -o ServerAliveInterval=10 auser@ssh.diamond.ac.uk > /tmp/autossh.log &
fi
