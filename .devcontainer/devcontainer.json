// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.231.6/containers/python-3
{
    "name": "Python 3",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".",
        "args": {}
    },
    "remoteEnv": {
        "DISPLAY": "${localEnv:DISPLAY}",
        "DOCKERD_OPT": "--iptables=false"
    },
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.linting.enabled": true,
        "python.testing.pytestArgs": [],
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,
        "python.formatting.provider": "black",
        "python.languageServer": "Pylance",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        }
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "streetsidesoftware.code-spell-checker",
        "ryanluker.vscode-coverage-gutters",
        "mhutchie.git-graph",
        "eamodio.gitlens",
        "gruntfuggly.todo-tree",
        "redhat.vscode-yaml",
        "nsd.vscode-epics",
        "alefragnani.bookmarks"
    ],
    // expose a user socket for host podman API
    "initializeCommand": "systemctl --user enable podman.socket",
    "runArgs": [
        // "--net=host",
        "--security-opt=label=type:container_runtime_t",
        "--annotation=run.oci.keep_original_groups=1",
        "-v=${localEnv:HOME}/.ssh:/root/.ssh",
        "-v=${localWorkspaceFolder}${localWorkspaceFolderBasename}/.bashrc_dev:/root/.bashrc",
        "-v=${localWorkspaceFolder}${localWorkspaceFolderBasename}/.inputrc:/root/.inputrc",
        "-v=${localEnv:XDG_RUNTIME_DIR}/podman/podman.socket:/run/podman/podman.sock"
    ],
    "mounts": [
        // map in home directory - not strictly necessary but may be useful
        "source=${localEnv:HOME},target=${localEnv:HOME},type=bind,consistency=cached",
        "source=/tmp,target=/tmp,type=bind,consistency=cached"
    ],
    "workspaceMount": "source=${localWorkspaceFolder},target=${localWorkspaceFolder},type=bind",
    "workspaceFolder": "${localWorkspaceFolder}"
}