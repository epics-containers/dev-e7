{
    "name": "Python 3",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".",
        "args": {}
    },
    "remoteEnv": {
        "DISPLAY": "${localEnv:DISPLAY}",
        "CONTAINER_HOST": "unix:/var/run/docker.sock",
        "USER": "${localEnv:USER}",
        "KUBECONFIG": "${localEnv:KUBECONFIG}",
        "SHELL": "${localEnv:SHELL}"
    },
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "python.defaultInterpreterPath": "/venv/bin/python"
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-vscode.cpptools",
        "ms-python.vscode-pylance",
        "ryanluker.vscode-coverage-gutters",
        "mhutchie.git-graph",
        "eamodio.gitlens",
        "redhat.vscode-yaml",
        "nsd.vscode-epics"
    ],
    // run anything outside the container before startup
    "initializeCommand": "systemctl --user start podman.socket",
    "runArgs": [
        "--security-opt=label=disable",
        "--annotation=run.oci.keep_original_groups=1",
        "--storage-opt=ignore_chown_errors=true",
        "--net=host",
        "-v=${localEnv:HOME}/.ssh:/root/.ssh",
        "-v=${localEnv:HOME}/.bash_history:/root/.bash_history",
        "-v=${localWorkspaceFolder}/.bashrc_dev:/root/.bashrc",
        "-v=${localWorkspaceFolder}/.inputrc:/root/.inputrc",
        "-v=${localEnv:XDG_RUNTIME_DIR}/podman/podman.sock:/var/run/docker.sock"
        // uncomment these to authenticat to DLS kubernetes clusters
        // "-v=/dls_sw/apps/kubernetes/pollux/:/dls_sw/apps/kubernetes/pollux/",
        // "-v=/dls_sw/apps/kubernetes/argus/:/dls_sw/apps/kubernetes/argus/"
    ],
    // can install peer python projects directly into venv
    // "postStartCommand": "pip install -e ../ophyd[dev]",
    "mounts": [
        "source=${localEnv:HOME},target=${localEnv:HOME},type=bind,consistency=cached",
        "source=/tmp,target=/tmp,type=bind,consistency=cached"
    ],
    // mount the parent folder so we can add peers to the workspace
    // use localWorkspaceFolder so that paths inside and outside the container match
    "workspaceMount": "source=${localWorkspaceFolder}/..,target=${localWorkspaceFolder}/..,type=bind",
    "workspaceFolder": "${localWorkspaceFolder}"
}